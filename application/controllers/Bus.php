<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Bus extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Bus_model');
    } 

    /*
     * Listing of buses
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('bus/index?');
        $config['total_rows'] = $this->Bus_model->get_all_buses_count();
        $this->pagination->initialize($config);

        $data['buses'] = $this->Bus_model->get_all_buses($params);
        
        $data['_view'] = 'bus/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new bus
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('route_id','Route Id','required');
		$this->form_validation->set_rules('contractor_id','Contractor Id','required');
		$this->form_validation->set_rules('driver_id','Driver Id','required');
		$this->form_validation->set_rules('passing_number','Passing Number','required');
		$this->form_validation->set_rules('type','Type','required');
		$this->form_validation->set_rules('capacity','Capacity','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'route_id' => $this->input->post('route_id'),
				'contractor_id' => $this->input->post('contractor_id'),
				'driver_id' => $this->input->post('driver_id'),
				'passing_number' => $this->input->post('passing_number'),
				'type' => $this->input->post('type'),
				'capacity' => $this->input->post('capacity'),
            );
            
            $bus_id = $this->Bus_model->add_bus($params);
            redirect('bus/index');
        }
        else
        {
			$this->load->model('Route_model');
			$data['all_routes'] = $this->Route_model->get_all_routes();

			$this->load->model('Contractor_model');
			$data['all_contractors'] = $this->Contractor_model->get_all_contractors();

			$this->load->model('Driver_model');
			$data['all_driver'] = $this->Driver_model->get_all_driver();
            
            $data['_view'] = 'bus/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a bus
     */
    function edit($id)
    {   
        // check if the bus exists before trying to edit it
        $data['bus'] = $this->Bus_model->get_bus($id);
        
        if(isset($data['bus']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('route_id','Route Id','required');
			$this->form_validation->set_rules('contractor_id','Contractor Id','required');
			$this->form_validation->set_rules('driver_id','Driver Id','required');
			$this->form_validation->set_rules('passing_number','Passing Number','required');
			$this->form_validation->set_rules('type','Type','required');
			$this->form_validation->set_rules('capacity','Capacity','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'route_id' => $this->input->post('route_id'),
					'contractor_id' => $this->input->post('contractor_id'),
					'driver_id' => $this->input->post('driver_id'),
					'passing_number' => $this->input->post('passing_number'),
					'type' => $this->input->post('type'),
					'capacity' => $this->input->post('capacity'),
                );

                $this->Bus_model->update_bus($id,$params);            
                redirect('bus/index');
            }
            else
            {
				$this->load->model('Route_model');
				$data['all_routes'] = $this->Route_model->get_all_routes();

				$this->load->model('Contractor_model');
				$data['all_contractors'] = $this->Contractor_model->get_all_contractors();

				$this->load->model('Driver_model');
				$data['all_driver'] = $this->Driver_model->get_all_driver();

                $data['_view'] = 'bus/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The bus you are trying to edit does not exist.');
    } 

    /*
     * Deleting bus
     */
    function remove($id)
    {
        $bus = $this->Bus_model->get_bus($id);

        // check if the bus exists before trying to delete it
        if(isset($bus['id']))
        {
            $this->Bus_model->delete_bus($id);
            redirect('bus/index');
        }
        else
            show_error('The bus you are trying to delete does not exist.');
    }
    
}
