<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Route extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Route_model');
    } 

    /*
     * Listing of routes
     */
    function index()
    {
        $data['routes'] = $this->Route_model->get_all_routes();
        
        $data['_view'] = 'route/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new route
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('locations[]','Locations','max_length[1000]|required');
		$this->form_validation->set_rules('name','Name','required|max_length[50]');
		$this->form_validation->set_rules('rate','Rate','integer|required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'locations' => json_encode($this->input->post('locations')),
				'name' => $this->input->post('name'),
				'rate' => $this->input->post('rate'),
            );
            
            $route_id = $this->Route_model->add_route($params);
            redirect('route/index');
        }
        else
        {
            $this->load->model('Location_model');
            $data['all_locations'] = $this->Location_model->get_all_locations();

            $data['_view'] = 'route/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a route
     */
    function edit($id)
    {   
        // check if the route exists before trying to edit it
        $data['route'] = $this->Route_model->get_route($id);
        
        if(isset($data['route']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('locations[]','Locations','max_length[1000]|required');
			$this->form_validation->set_rules('name','Name','required|max_length[50]');
			$this->form_validation->set_rules('rate','Rate','integer|required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'locations' => json_encode($this->input->post('locations')),
					'name' => $this->input->post('name'),
					'rate' => $this->input->post('rate'),
                );

                $this->Route_model->update_route($id,$params);            
                redirect('route/index');
            }
            else
            {
                $this->load->model('Location_model');
                $data['all_locations'] = $this->Location_model->get_all_locations();

                $data['_view'] = 'route/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The route you are trying to edit does not exist.');
    } 

    /*
     * Deleting route
     */
    function remove($id)
    {
        $route = $this->Route_model->get_route($id);

        // check if the route exists before trying to delete it
        if(isset($route['id']))
        {
            $this->Route_model->delete_route($id);
            redirect('route/index');
        }
        else
            show_error('The route you are trying to delete does not exist.');
    }
    
}
